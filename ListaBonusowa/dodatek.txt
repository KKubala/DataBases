--55, GIST, circle_ops, &&    -- Kamila Kubala, 299626


1.Kiedy typ indeksu GIST się dobrze sprawdza?

GiST (Generalized Search Tree) - Uogólnione drzewo wyszukiwania. 
Jest to zrównoważona, drzewiasta metoda dostępu, która działa jako podstawowy szablon do wdrażania dowolnych schematów indeksowania.
Indeksy GiST są przydatne, gdy dane w różnych wierszach pokrywają się w jednej kolumnie. Można za ich pomocą wygodnie sprawdzić, czy dana figura zawiera wybrany punkt.


2.Specyfikacja klasy - circle_ops?
Ta klasa operatorów pozwala na wykonywanie operacji na okręgach i opisuje ich wzajemne położenie.

3.Opis operatora - &&?
Operator sprawdza czy dwa okręgi mają punkt wspólny. Czyli czy sie przecinają.


4.Eksperyment:

--stworzenie i wypelnienie tabeli
CREATE TABLE circles(id SERIAL PRIMARY KEY, c circle, t text, n numeric, ts timestamp);
INSERT INTO  circles(c, t, n, ts)
	SELECT circle(point(n%10000, n%10000),floor(random()*10)),
	MD5(random()::text),
	random()*123456789::numeric, now()
	FROM generate_series(1,1000000) AS n;
VACUUM ANALYZE;

--indeksowanie
CREATE INDEX ON circles USING GIST (c circle_ops);
VACUUM ANALYZE;


--Przykad pierwszy
EXPLAIN ANALYZE SELECT c FROM circles WHERE c && circle(point(3,3),3);


---CZAS BEZ INDEKOSWANIA--------
 Gather  (cost=1000.00..20994.33 rows=5000 width=24) (actual time=0.706..78.832 rows=862 loops=1)
   Workers Planned: 2
   Workers Launched: 2
   ->  Parallel Seq Scan on circles  (cost=0.00..19494.33 rows=2083 width=24) (actual time=1.056..60.802 rows=287 loops=3)
         Filter: (c && '<(3,3),3>'::circle)
         Rows Removed by Filter: 333046
 Planning time: 0.396 ms
 Execution time: 78.939 ms
(8 rows)

---CZAS Z INDEKSAMI--------------
 Index Scan using circles_c_idx on circles  (cost=0.41..17323.91 rows=5000 width=24) (actual time=0.103..2.224 rows=859 loops=1)
   Index Cond: (c && '<(3,3),3>'::circle)
   Rows Removed by Index Recheck: 288
 Planning time: 0.178 ms
 Execution time: 2.367 ms
(5 rows)


--Przykad drugi
EXPLAIN ANALYZE SELECT c FROM circles WHERE c && circle(point(5,5),1);

--CZAS BEZ INDEKSOWANIA----------
 Gather  (cost=1000.00..20994.33 rows=5000 width=24) (actual time=0.571..58.384 rows=725 loops=1)
   Workers Planned: 2
   Workers Launched: 2
   ->  Parallel Seq Scan on circles  (cost=0.00..19494.33 rows=2083 width=24) (actual time=2.282..47.824 rows=242 loops=3)
         Filter: (c && '<(5,5),1>'::circle)
         Rows Removed by Filter: 333092
 Planning time: 0.140 ms
 Execution time: 58.456 ms
(8 rows)

---CZAS Z INDEKSAMI--------------
 Index Scan using circles_c_idx on circles  (cost=0.41..17323.91 rows=5000 width=24) (actual time=0.111..2.017 rows=748 loops=1)
   Index Cond: (c && '<(5,5),1>'::circle)
   Rows Removed by Index Recheck: 291
 Planning time: 0.160 ms
 Execution time: 2.143 ms
(5 rows)




